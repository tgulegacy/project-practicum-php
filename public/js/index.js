(()=>{"use strict";function t(t,e,i={}){(i={path:"/",...i}).expires instanceof Date&&(i.expires=i.expires.toUTCString());let a=encodeURIComponent(t)+"="+encodeURIComponent(e);for(let t in i){a+="; "+t;let e=i[t];!0!==e&&(a+="="+e)}document.cookie=a}const e={setCookie:t,getCookie:function(t){let e=document.cookie.match(new RegExp("(?:^|; )"+t.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g,"\\$1")+"=([^;]*)"));return e?decodeURIComponent(e[1]):void 0},deleteCookie:function(e){t(e,"",{"max-age":-1})}};class i{constructor({el:t,onChange:e,cookieName:i}){this.el=t,this.header=this.el.querySelector("[data-select-header]"),this.headerText=this.el.querySelector("[data-header-text]"),this.items=this.el.querySelectorAll("[data-select-item]"),this.onChange=e,this.cookieName=i,this.init()}init(){if(this.cookieName){const t=e.getCookie(this.cookieName);if(t){const e=this.el.querySelector(`[data-select-item="${t}"]`);this.changeValue(e)}}this.header.addEventListener("click",(()=>this.toggle())),this.items.forEach((t=>{t.addEventListener("click",(()=>this.changeValue(t)))}))}toggle(){this.el.classList.toggle("select_open")}open(){this.el.classList.add("select_open")}hide(){this.el.classList.remove("select_open")}changeValue(t){const i=t.dataset.selectItem,a=t.innerText.trim();this.headerText.innerText=a,this.hide(),this.cookieName&&e.setCookie(this.cookieName,i),this.onChange&&this.onChange({name:a,value:i})}}const a=[{id:"1",title:"Велосипеды",items:[{id:"1",title:"Горные",items:[]},{id:"2",title:"Фэтбайки",items:[]},{id:"3",title:"Городские",items:[]}]},{id:"2",title:"Комплектующие",items:[{id:"1",title:"Колеса",items:[]},{id:"2",title:"Рамы",items:[]}]},{id:"3",title:"Аксессуары",items:[{id:"1",title:"Наклейки",items:[]},{id:"2",title:"Сумки",items:[]}]}];class n{constructor(t){this.el=t,this.isOpen=!1}toggleNav(){this.isOpen?this.hideNav():this.openNav()}openNav(){this.el.classList.add("nav_open"),this.isOpen=!0}hideNav(){this.el.classList.remove("nav_open"),this.isOpen=!1}openMenuItem(t){t.classList.add("nav__item_open")}hideMenuItem(t){t.closest("[data-nav-item]").classList.remove("nav__item_open")}}class s{constructor(t){this.el=document.getElementById(t),this.init()}init(){this.render()}render(){let t='\n\t\t\t<div class="nav__items">\n\t\t\t\t<div class="nav__control-panel">\n\t\t\t\t\t<svg width="18" height="18" data-hide-nav>\n\t\t\t\t\t\t<use href="#close"></use>\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t';a.forEach((e=>{const i=e.title,a=e.items;let n=`\n\t\t\t\t<div class="nav__item" data-nav-item>\n\t\t\t\t\t<div class="nav__content">\n\t\t\t\t\t\t<div class="nav__title button-1">\n\t\t\t\t\t\t\t<span>${i}</span>\n\t\t\t\t\t\t\t<svg width="10" height="20" class="nav__title-arrow">\n\t\t\t\t\t\t\t\t<use href="#arrow"></use>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</div>\n\t\t\t`;n+=this.renderSubMenu(a),n+='\n\t\t\t\t\t</div>\n\t\n\t\t\t\t\t<div class="nav__bg"></div>\n\t\t\t\t</div>\n\t\t\t',t+=n})),this.el.innerHTML=t}renderSubMenu(t){let e='\n\t\t\t<div class="nav__inner" data-nav-subitems>\n            \t<div class="nav__control-panel" data-nav-item-hide>\n            \t    <svg width="8" height="12">\n            \t        <use href="#chevron"></use>\n            \t    </svg>\n            \t    \n            \t    <span class="button-1">назад</span>\n            \t</div>\n\t\t';return t.forEach((t=>{const i=t.title;e+=`<a class="nav__item nav__subcategory">${i}</a>`})),e+"</div>"}}class r{constructor(t){this.el=t,this.header=this.el.querySelector("[data-accordion-header]"),this.inner=this.el.querySelector("[data-accordion-inner]"),this.innerHeigth=this.inner.scrollHeight,this.isOpen=!1,this.init()}init(){this.header.addEventListener("click",(()=>{this.isOpen?this.hide():this.open()}))}toggle(){this.el.classList.toggle("accordion_open")}open(){this.inner.style.height=this.innerHeigth+"px",this.el.classList.add("accordion_open"),this.isOpen=!0}hide(){this.inner.style.height="0px",this.el.classList.remove("accordion_open"),this.isOpen=!1}}class o{constructor(t,e){this.el=t,this.filterItems=null,this.data=null,this.onChange=e}async init(){this.filterItems=this.getFilterItems(),this.data=this.getCurrentFilter(),this.initListeners()}getFilterItems(){const t=[];return this.el.querySelectorAll("[data-filter-el]").forEach((e=>{const i=e.dataset.filterType,a=e.dataset.filterCode;if("range"===i){let n=e.querySelector("[data-filter-item]");t.push({type:i,code:a,min:n.getAttribute("min"),max:n.getAttribute("max")})}else if("checkbox"===i){let n=Array.from(e.querySelectorAll("[data-filter-item]")).map((t=>t.getAttribute("name")));t.push({type:i,code:a,items:n})}})),console.log(t),t}async renderItems(){const t=this.filterItems;let e="";t.forEach((t=>{let i="";if("checkbox"===t.type)t.items.forEach((e=>{const a=this.isItemPicked(t.code,e.code);i+=this.renderItem(e,t.type,{isPicked:a})})),e+=`\n                <div class="accordion filters__item" data-accordion data-filter-el data-filter-code="${t.code}" data-filter-type="${t.type}">\n                    <div class="accordion__header" data-accordion-header>\n                        <span class="accordion__title body-1">${t.title}</span>\n    \n                        <svg class="accordion__icon" width="10" height="5">\n                            <use href="#arrow"></use>\n                        </svg>\n                    </div>\n    \n                    <div class="accordion__inner filters__checkboxes"\n                         data-accordion-inner>\n                         ${i}\n                    </div>\n                </div>\n            `;else if("range"===t.type){const i=this.data.find((e=>e.code===t.code)),{min:a,max:n}=t,[s,r]=i?.items.map((t=>+t))||[a,n];e+=`\n                <div class="accordion filters__item" data-accordion data-filter-el data-filter-code="${t.code}" data-filter-type="${t.type}">\n                    <div class="accordion__header" data-accordion-header>\n                        <span class="accordion__title body-1">${t.title}</span>\n    \n                        <svg class="accordion__icon" width="10" height="5">\n                            <use href="#arrow"></use>\n                        </svg>\n                    </div>\n    \n                    <div class="accordion__inner filters__checkboxes"\n                         data-accordion-inner>\n                         <div>\n                            ${this.renderItem(t,t.type,{left:s,right:r,min:a,max:n})}\n                         </div>\n                    </div>\n                </div>\n                `}})),this.el.innerHTML=e}changeData(t){this.data=t,this.el.querySelectorAll("[data-filter-el]").forEach((e=>{const i=e.dataset.filterCode,a=e.querySelectorAll("[data-filter-item]"),n=t.find((t=>t.code===i));if(n)a.forEach((t=>{const e=t.name;if("checkbox"===n.type)t.checked=!(!n||!n.items.includes(e));else{const[e,i]=n.items.map((t=>+t)),a=t.closest("[data-range]");this.changeRangeItemValue(a,e,i)}}));else{const t=this.filterItems.find((t=>t.code===i));if("checkbox"===t.type)a.forEach((t=>{t.checked=!1}));else if("range"===t.type){const[i,a]=[t.min,t.max],n=e.querySelector("[data-range]");this.changeRangeItemValue(n,i,a)}}}))}renderItem(t,e,i={}){if("checkbox"===e)return`\n                <label class="checkbox">\n                    <input class="checkbox__native" \n                           type="checkbox" name="${t.code}"\n                           data-filter-item \n                           ${i.isPicked?"checked":""}>\n        \n                    <span class="checkbox__box"></span>\n        \n                    <span class="checkbox__text">${t.title}</span>\n                </label>\n            `;if("range"===e){const{min:t,max:e,left:a,right:n}=i;return`\n            <div class="range-el" style='--left: ${a}; --right: ${n}; --min: ${t}; --max: ${e}' data-range>\n                <div class="range-el__inputs" role='group' aria-labelledby='multi-lbl'>\n                    <input type='range' min=${t} value=${a} max=${e} data-range-left data-filter-item>\n                    \n                    <input type='range' min=${t} value=${n} max=${e} data-range-right>\n                    \n                    <div class="range-el__bg-line"></div>\n                </div>\n                <div class="range-el__outputs">\n                    <output style='--c: var(--left)'></output>\n                    <output style='--c: var(--right)'></output>\n                </div>\n            </div>\n            `}}changeRangeItemValue(t,e,i){const a=t.querySelector("[data-range-left]"),n=t.querySelector("[data-range-right]");a.value=e,n.value=i,t.style.setProperty("--left",e),t.style.setProperty("--right",i)}initListeners(){const t=[];this.el.querySelectorAll("[data-accordion]").forEach((e=>{t.push(new r(e))}));const e=document.querySelector("[data-filters-open]"),i=document.querySelector("[data-filters-hide]"),a=document.querySelector("[data-filters-reset]");e.addEventListener("click",(()=>{t.forEach((t=>{t.hide()}))})),i.addEventListener("click",(()=>{t.forEach((t=>{t.open()}))})),a.addEventListener("click",(()=>{const t=this.data;t.forEach((t=>{if("checkbox"===t.type)t.items=[];else if("range"===t.type){const e=t.code,{min:i,max:a}=this.filterItems.find((t=>t.code===e));t.items=[i,a]}})),this.changeData(t),this.emitDataChange()})),this.el.querySelectorAll("[data-filter-el]").forEach((t=>{const e=t.dataset.filterCode,i=t.dataset.filterType;"checkbox"===i?t.querySelectorAll("[data-filter-item]").forEach((t=>{const a=t.name;t.addEventListener("change",(()=>{t.checked?this.addItem(e,a,i):this.removeItem(e,a),this.emitDataChange()}))})):function(t,e){const i=t.querySelector("input[data-range-left]"),a=t.querySelector("input[data-range-right]");i.addEventListener("input",(e=>{const n=+e.target.value;i.value=String(n>=+a.value?+a.value-1:n),t.style.setProperty("--left",i.value)})),a.addEventListener("input",(e=>{const n=+e.target.value;a.value=String(n<=+i.value?+i.value+1:n),t.style.setProperty("--right",a.value)})),e&&(i.addEventListener("change",(()=>{e(+i.value,+a.value)})),a.addEventListener("change",(()=>{e(+i.value,+a.value)})))}(t.querySelector("[data-range]"),((t,a)=>{const n=this.data.find((t=>t.code===e)),{min:s,max:r}=this.filterItems.find((t=>t.code===e));if(t===s&&r===a){const t=this.data.findIndex((t=>t.code===e));this.data.splice(t,1)}else n?n.items=[t,a]:this.data.push({code:e,type:i,items:[t,a]});this.emitDataChange()}))}))}emitDataChange(){const t=this.data.filter((t=>"checkbox"!==t.type||t.items.length));this.onChange(t)}addItem(t,e,i){const a=this.data.find((e=>e.code===t));if(a){if(a.items.includes(e))return;a.items.push(e)}else this.data.push({code:t,type:i,items:[e]})}removeItem(t,e){const i=this.data.find((e=>e.code===t));if(i){const t=i.items.indexOf(e);i.items.splice(t,1)}}isItemPicked(t,e){const i=this.data.find((e=>e.code===t));return!!i&&i.items.includes(e)}getCurrentFilter(){let t=new URL(window.location.href).searchParams;t.delete("page");const e=function(t){const e=[];return t.forEach(((t,i)=>{e.push({code:i,items:t.split(",")})})),e}(t);return this.filterItems.forEach((t=>{const i=e.find((e=>e.code===t.code));i&&(i.type=t.type)})),e}}class c{constructor(t,e){this.el=t,this.onChange=e,this.initListeners()}initListeners(){this.el.addEventListener("click",(t=>{const e=t.target;let i;if(e.dataset.page)i=+e.dataset.page;else{if(!e.closest("[data-page]"))return;i=+e.closest("[data-page]").dataset.page}this.onPageChange(i)}))}onPageChange(t){t&&this.onChange(t)}renderPaginationItems(t,e){let i='<div class="catalog__pagination-pages">';for(let a=1;a<=e;a++)i+=this.renderPaginationItem(a,+t);i+="</div>",i+=this.renderButtons(t,e),this.el.innerHTML=i}renderPaginationItem(t,e){return t===e?`<button class="catalog__pagination-page catalog__pagination-page_select" data-page="${t}">\n\t\t\t\t\t\t${t}\n\t\t\t\t\t</button>`:`<button class="catalog__pagination-page" data-page="${t}">\n\t\t\t\t\t\t${t}\n\t\t\t\t\t</button>`}renderButtons(t,e){return`\n\t\t\t<div class="catalog__pagination-by-one">\n        \t    <button class="catalog__pagination-arrow" data-page="${t-1}" ${1===t?"disabled":""}>\n        \t        <svg class="" width="10" height="16">\n        \t            <use href="#arrow-pagination"></use>\n        \t        </svg>\n        \t    </button>\n\t\n        \t    <button class="catalog__pagination-arrow" data-page="${t+1}" ${t===e?"disabled":""}>\n        \t        <svg class="" width="10" height="16">\n        \t            <use href="#arrow-pagination"></use>\n        \t        </svg>\n        \t    </button>\n        \t</div>\n\t\t`}}class l{constructor(t,e,i){this.el=t,this.filterEl=e,this.paginationEl=i,this.elements={filter:null,pagination:null,sort:null},this.meta={page:null,filters:[],sort:null,limit:12,q:null}}async init(){this.setLoading(!0);try{this.meta.page=this.getCurrentPage(),this.meta.query=this.getCurrentQuery(),this.meta.sort=e.getCookie("catalog-sort")||"alp",this.filterEl&&(this.elements.filter=await new o(this.filterEl,(async t=>{this.meta.page=1,this.meta.filters=t,await this.onMetaChange()}),this.meta.filters),await this.elements.filter.init(),this.meta.filters=this.elements.filter.getCurrentFilter()),this.initBasketToggleListeners();const t=document.getElementById("sort");this.elements.sort=new i({el:t,onChange:t=>{},cookieName:"catalog-sort"}),this.elements.pagination=new c(this.paginationEl,(async t=>{this.meta.page=+t,await this.onMetaChange()})),window.onpopstate=async()=>{this.meta.page=this.getCurrentPage(),this.meta.query=this.getCurrentQuery(),this.elements.filter&&(this.meta.filters=this.elements.filter.getCurrentFilter(),this.elements.filter.changeData(this.meta.filters)),await this.onMetaChange(!1)}}catch(t){console.log(t)}finally{this.setLoading(!1)}}async onMetaChange(t=!0){this.setLoading(!0);try{const[e,i]=await async function(t){try{const e=await fetch("http://mvc.php/api-catalog/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),i=await e.json(),{items:a,pageCount:n}=i;return[a,n]}catch(t){console.error("Ошибка:",t)}}(this.meta);if(this.elements.pagination.renderPaginationItems(this.meta.page,i),this.renderItems(e),t){const t=function(t){let e=[];return t.forEach((t=>{e.push(`${t.code}=${t.items.join(",")}`)})),`?${e.join("&")}`}([...this.meta.filters,{code:"page",items:[this.meta.page]}]);history.pushState({},"",window.location.origin+window.location.pathname+t)}}catch(t){console.log(t)}finally{this.setLoading(!1)}}setLoading(t){t?this.el.classList.add("catalog__items_loading"):this.el.classList.remove("catalog__items_loading")}getCurrentPage(){return+new URL(window.location.href).searchParams.get("page")||1}getCurrentQuery(){return new URL(window.location.href).searchParams.get("q")}renderItems(t){let e="";t.forEach((t=>{e+=this.renderItem(t)})),this.el.innerHTML=e}renderItem(t){return`\n        <div class="product-card">\n            <div class="product-card__inner">\n                <div class="product-card__controls">\n                    <svg class="svg-grey" width="24" height="22">\n                        <use href="#hearth"></use>\n                    </svg>\n\n                    <div class="product-card__basket ${t.inBasket?"product-card__basket_active":""}" data-basket-toggle="${t.inBasket?"1":""}" data-item-id="${t.id}">\n                        <svg class="svg-primary" width="20" height="20">\n                            <use href="#basket"></use>\n                        </svg>\n                    </div>\n                </div>\n\n                <img class="product-card__image"\n                     src="/img/${t.image}"\n                     alt="Изображение">\n\n                <div class="product-card__description">\n                    ${t.description}\n                </div>\n\n                <div class="product-card__price">\n                    <span>\n                        ${t.price}\n                    </span>\n\n                    <svg class="svg-primary" width="17" height="17">\n                        <use href="#rub"></use>\n                    </svg>\n                </div>\n            </div>\n        </div>`}initBasketToggleListeners(){this.el.addEventListener("click",(async t=>{if(!t.target.hasAttribute("data-basket-toggle")&&!t.target.closest("[data-basket-toggle]"))return;let e;e=t.target.hasAttribute("data-basket-toggle")?t.target:t.target.closest("[data-basket-toggle]");const i=+e.dataset.itemId,a=!!e.dataset.basketToggle,n=await async function(t,e){try{const i=await fetch("http://localhost:5000/api/basket/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:t,quantity:e})});return await i.json()}catch(t){console.error("Ошибка:",t)}}(i,a?0:1);n.ok&&e.classList.toggle("product-card__basket_active")}))}}async function d(){if(new s("nav"),window.innerWidth<=1024){const t=new n(document.getElementById("nav"));document.querySelector("[data-toggle-nav]").addEventListener("click",(()=>t.toggleNav())),document.querySelector("[data-hide-nav]").addEventListener("click",(()=>t.hideNav())),document.querySelectorAll("[data-nav-item]").forEach((e=>{e.addEventListener("click",(()=>t.openMenuItem(e)))})),document.querySelectorAll("[data-nav-item-hide]").forEach((e=>{e.addEventListener("click",(()=>t.hideMenuItem(e)))})),document.querySelectorAll("[data-nav-subitems]").forEach((t=>{t.addEventListener("click",(t=>{t.stopPropagation()}))}))}await new l(document.getElementById("catalog-items"),document.getElementById("filter-items"),document.getElementById("pagination")).init()}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",(()=>{d()})):d()})();